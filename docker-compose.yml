version: '3.8'
services:
  db:
    image: postgres:15
    container_name: movie-recommendation-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - movie_recommendation_network
  redis:
    image: redis:latest
    container_name: movie-recommendation-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - movie_recommendation_network
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: movie-recommendation-web
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=movies.settings
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - TMDB_API_KEY=${TMDB_API_KEY}
      - EC2_PUBLIC_IP=${EC2_PUBLIC_IP}
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - movie_recommendation_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  nginx:
    image: nginx:latest
    container_name: movie-recommendation-nginx
    restart: always
    ports:
      - "8080:80"
      # - "80:80"  # Uncomment after resolving port conflict
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_files:/app/staticfiles
      - media_files:/app/media
    depends_on:
      web:
        condition: service_healthy
    networks:
      - movie_recommendation_network
volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:
networks:
  movie_recommendation_network:
    driver: bridge